{
  "swagger": "2.0",
  "info": {
    "title": "Platinmarket API",
    "description": "Platinmarket Swagger API",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/api",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/catalog/category/read": {
      "post": {
        "summary": "Get Category",
        "description": "get category details with category Id\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Category read default parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryId"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/catalog/category/delete": {
      "post": {
        "summary": "Delete Category",
        "description": "delete category using id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Category delete default parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryId"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Success"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/catalog/category/children": {
      "post": {
        "summary": "Get Category Children",
        "description": "get category details with category Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryIdWithStatus"
            }

          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    },
    "/catalog/category/tree": {
      "post": {
        "summary": "Get Category Tree",
        "description": "get category tree with  seperator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryTree"
            }

          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryName"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    },
    "/catalog/category/count": {
      "post": {
        "summary": "Get Count Children",
        "description": "get category children count with category Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryIdWithStatus"
            }

          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChildrenCounts"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    },
    "/catalog/category/status": {
      "post": {
        "summary": "Set Category Status",
        "description": "set category tree status true or false",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryIdWithStatus"
            }

          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Returned response result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Success"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    },
    "/catalog/category/create": {
      "post": {
        "summary": "New Category",
        "description": "get category details with category Id",
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newCategory"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    },
    "/catalog/category/parent": {
      "post": {
        "summary": "Has Category Parent",
        "description": "get category parent true or false",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "category id request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryId"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnTrueFalse"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/catalog/category/path": {
      "post": {
        "summary": "Get Category Path",
        "description": "get category detail path",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "category id request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryId"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/catalog/category/update": {
      "post": {
        "summary": "Update Category",
        "description": "update category ",
        "parameters": [
          {
            "in": "body",
            "name": "Category",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCategory"
            }
          }
        ],
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category detail arrays",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }

    }

  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "description": "Unique identifier representing a specific category ID"
        },
        "image": {
          "type": "string",
          "description": "image url category"
        },
        "parent_id": {
          "type": "integer",
          "description": "category parent id"
        },
        "lft": {
          "type": "integer",
          "description": "category tree lft"
        },
        "rght": {
          "type": "integer",
          "description": "category tree rght"
        },
        "status": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "date_added": {
          "type": "string",
          "description": "category added date"
        },
        "date_modified": {
          "type": "string",
          "description": "category updated date"
        },
        "language_id": {
          "type": "integer",
          "description": "current using language id"
        },
        "name": {
          "type": "string",
          "description": "Category name obtained using the current language"
        },
        "description": {
          "type": "string",
          "description": "Category description obtained using the current language"
        },
        "meta_title": {
          "type": "string",
          "description": "Category meta_title obtained using the current language"
        },
        "meta_description": {
          "type": "string",
          "description": "Category meta_description obtained using the current language"
        },
        "meta_keyword": {
          "type": "string",
          "description": "Category meta_keyword obtained using the current language"
        }
      }
    },
    "CategoryId": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "required": true,
          "description": "Unique identifier representing a specific category ID"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string",
          "description": "if process complate result is ok"
        }
      }
    },
    "ReturnTrueFalse": {
      "type": "object",
      "properties": {
        "return": {
          "type": "string",
          "description": "if process complate result is ok"
        }
      }
    },
    "ChildrenCounts": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "child category returned count"
        }
      }
    },
    "CategoryIdWithStatus": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "required": true,
          "description": "Unique identifier representing a specific category ID"
        },
        "status": {
          "type": "integer",
          "required": false,
          "description": "Category status 1/false/true"
        }
      }
    },
    "CategoryTree": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "required": false,
          "description": "Category status 1/false/true"
        },
        "separator": {
          "type": "string",
          "required": false,
          "description": "category tree separator"
        }
      }
    },
    "CategoryName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "returned category name"
        }
      }
    },
    "newCategory": {
      "type": "object",
      "properties": {
        "parent_id": {
          "type": "integer",
          "description": "Unique identifier representing a specific category ID"
        },
        "top": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "column": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "sort_order": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "status": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "category_store": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "language_id": {
          "type": "integer",
          "description": "current using language id"
        },
        "description": {
          "type": "string",
          "description": "Category description obtained using the current language"
        },
        "meta_description": {
          "type": "string",
          "description": "Category meta_description obtained using the current language"
        },
        "meta_keyword": {
          "type": "string",
          "description": "Category meta_keyword obtained using the current language"
        },
        "name": {
          "type": "string",
          "description": "Category name obtained using the current language"
        },
        "meta_title": {
          "type": "string",
          "description": "Category meta_title obtained using the current language"
        }
      }
    },
    "updateCategory": {
      "type": "object",
      "properties": {
        "parent_id": {
          "type": "integer",
          "description": "Unique identifier representing a specific category ID"
        },
        "top": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "column": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "sort_order": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "status": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "category_id": {
          "type": "integer",
          "description": "category id"
        },
        "category_store": {
          "type": "integer",
          "description": "category active or passive 1/0"
        },
        "language_id": {
          "type": "integer",
          "description": "current using language id"
        },
        "description": {
          "type": "string",
          "description": "Category description obtained using the current language"
        },
        "meta_description": {
          "type": "string",
          "description": "Category meta_description obtained using the current language"
        },
        "meta_keyword": {
          "type": "string",
          "description": "Category meta_keyword obtained using the current language"
        },
        "name": {
          "type": "string",
          "description": "Category name obtained using the current language"
        },
        "meta_title": {
          "type": "string",
          "description": "Category meta_title obtained using the current language"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}